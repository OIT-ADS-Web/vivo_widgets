- import edu.duke.oit.vw.scalatra.TemplateHelpers._
- import edu.duke.oit.vw.models.Publication
- import edu.duke.oit.vw.models.Person

-@ var publications: List[Publication]
-@ var person: Person
-@ var style: String
-@ val searchURI: String = ""

-# for debugging
-# - for(publication <- publications)
-#   = publication.title

-# if we are styling, set a couple of variables
- val ulStyle = if(style == "yes") " list-style:none;border:solid 1px #CCC;-moz-border-radius: 15px;border-radius: 15px;margin:3px;padding:4px; " else ""
- val liStyle = if(style == "yes") " margin:.45em;padding:.45em; " else ""

- val findPreferredFormat = person.get("preferredCitationFormat")
- var preferredFormat = findPreferredFormat

ul(style=ulStyle)
  - for(publication <- publications)
    li(style=liStyle)
      - if (preferredFormat == "http://vivo.duke.edu/vivo/ontology/duke-extension#apaCitation")
        != publication.get("apaCitation")
      - if (preferredFormat == "http://vivo.duke.edu/vivo/ontology/duke-extension#chicagoCitation")
        != publication.get("chicagoCitation")
      - if (preferredFormat == "http://vivo.duke.edu/vivo/ontology/duke-extension#mlaCitation")
        != publication.get("mlaCitation")
      - if (preferredFormat == "http://vivo.duke.edu/vivo/ontology/duke-extension#icmjeCitation")
        != publication.get("icmjeCitation")
      - else
        != publication.get("chicagoCitation")

      a(onmouseout="this.style.textDecoration ='underline';"
      onmouseover="this.style.textDecoration ='none';this.style.cursor='pointer'"
      style="color:#2485AE;text-decoration:underline"
      href="#{fixURL(publication.uri)}") More info
