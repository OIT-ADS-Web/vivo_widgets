- import edu.duke.oit.vw.scalatra.TemplateHelpers._
- import edu.duke.oit.vw.models.Publication
-@ var publications: List[Publication]
-@ var style: String
-@ val searchURI: String = ""

-# for debugging
-# - for(publication <- publications)
-#   = publication.title

-# if we are styling, set a couple of variables
- val ulStyle = if(style == "yes") " list-style:none;border:solid 1px #CCC;-moz-border-radius: 15px;border-radius: 15px;margin:3px;padding:4px; " else ""
- val liStyle = if(style == "yes") " margin:.45em;padding:.45em; " else ""

ul(style=ulStyle)
  - for(publication <- publications)
    - val conferenceStartDateMonth = publication.get("conferenceStartDateMonth")
    - val conferenceStartDateDay = publication.get("conferenceStartDateDay")
    - val conferenceStartDateYear = publication.get("conferenceStartDateYear")
    - val conferenceFinishDateMonth = publication.get("conferenceFinishDateMonth")
    - val conferenceFinishDateDay = publication.get("conferenceFinishDateDay")
    - val conferenceFinishDateYear = publication.get("conferenceFinishDateYear")
    - val conferenceStartDateFull = if(!empty(conferenceStartDateYear)) conferenceStartDateMonth + "/" + conferenceStartDateDay + "/" + conferenceStartDateYear
    - val conferenceFinishDateFull = if(!empty(conferenceFinishDateYear)) " - " + conferenceFinishDateMonth + "/" + conferenceFinishDateDay + "/" + conferenceFinishDateYear

    li(style=liStyle)
      = render(tpath("shared/citation.jade"), Map("it" -> publication))
      | #{conferenceStartDateFull}#{conferenceFinishDateFull}

      a(onmouseout="this.style.textDecoration ='underline';"
        onmouseover="this.style.textDecoration ='none';this.style.cursor='pointer'"
        style="color:#2485AE;text-decoration:underline"
        href="#{fixURL(publication.uri)}") More info


