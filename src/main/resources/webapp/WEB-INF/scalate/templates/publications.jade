- import edu.duke.oit.vw.scalatra.TemplateHelpers._
- import edu.duke.oit.vw.models.Publication
-@ var publications: List[Publication]
-@ var style: String
-@ val searchURI: String = ""

-# for debugging
-# - for(publication <- publications)
-#   = publication.title

-# if we are styling, set a couple of variables
- val ulStyle = if(style == "yes") " list-style:none;border:solid 1px #CCC;-moz-border-radius: 15px;border-radius: 15px;margin:3px;padding:4px; " else ""
- val liStyle = if(style == "yes") " margin:.45em;padding:.45em; " else ""

ul(style=ulStyle)
  - for(publication <- publications)

    - val rawStartDate = publication.getOrElse("startDate","")
    - val startDateParts = rawStartDate.split("T")
    - val startDateImproved = startDateParts(0)
    - val rawFinishDate = publication.getOrElse("finishDate","")
    - val finishDateParts = rawFinishDate.split("T")
    - val finishDateImproved = finishDateParts(0)

    -# val startDateFixed = publication.getOrElse("startDateFixed","")
    -# val finishDateFixed = publication.getOrElse("finishDateFixed","")

    li(style=liStyle)
      = render(tpath("shared/citation.jade"), Map("it" -> publication))

      - if(!empty(startDateImproved))
      | #{startDateImproved}
      - if(!empty(finishDateImproved))
      | - #{finishDateImproved}

      
      -# if (!empty(startDateFixed))
      -#| #{startDateFixed}
      -# if (!empty(finishDateFixed))
      -#| - #{finishDateFixed}
      
      a(onmouseout="this.style.textDecoration ='underline';"
        onmouseover="this.style.textDecoration ='none';this.style.cursor='pointer'"
        style="color:#2485AE;text-decoration:underline"
        href="#{fixURL(publication.uri)}") More info


